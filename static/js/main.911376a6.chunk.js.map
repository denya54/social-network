{"version":3,"sources":["redux/dialog-reducer.ts","redux/users-reducer.ts","api/api.ts","components/Login/Login.module.css","components/NavBar/NavBar.module.css","components/NavBar/NavBar.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/common/FormsControls/FormsConrols.module.css","assets/images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsConrols.tsx","utils/validators.ts","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["SEND_MESSAGE","initialState","dialogNames","id","name","ava","dialogMessages","message","sendMessageCreator","messageText","type","NewText","dialogReducer","state","action","body","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followAC","userID","unFollowAC","setUsersAC","setCurrentPageAC","pageNumber","setTotalUsersCountAC","totalCount","toggleIsFetching","followingProgressAC","userId","requestUsersThunkCreator","dispatch","a","userAPI","getUsers","data","items","followUnfollowFlow","apiMethod","actionCreator","resultCode","followThunk","follow","bind","unFollowThunk","unfollow","usersReducer","map","user","followed","filter","instance","axios","create","withCredentials","headers","baseURL","get","then","response","post","delete","getProfile","profileAPI","getStatus","updateStatus","newStatus","put","status","updatePhoto","photo","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","module","exports","NavBar","className","classes","nav","item","to","activeClassName","activeLink","active","Header","props","header","src","loginBlock","isAuth","onClick","logoutTC","SET_USER_DATA","setAuthUserData","payload","getAuthUserDataThunk","authReducer","HeaderContainer","this","React","Component","connect","auth","Login","LoginReduxForm","onSubmit","loginTC","console","log","reduxForm","form","handleSubmit","error","Field","placeholder","component","Input","validate","required","styles","formSummaryError","messages","length","stopSubmit","_error","SET_INITIALIZED","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeAppWithThunk","path","render","Preloader","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","Suspense","fallback","document","getElementById","style","backgroundColor","preloader","Textarea","input","meta","showError","touched","formControl","errorSpan","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","posts","likesCount","profile","addPostActionCreator","postText","postMessage","setStatusActionCreator","getUserProfileThunk","getStatusThunk","updateStatusThunk","updatePhotoThunk","photos","p","postID"],"mappings":"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","file":"static/js/main.911376a6.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'dialog/SEND_MESSAGE'\r\n\r\nexport type dialogNameType = {\r\n    id: number\r\n    name: string\r\n    ava: string\r\n}\r\n\r\nexport type dialogMessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogsPageType = {\r\n    dialogNames: Array<dialogNameType>\r\n    dialogMessages: Array<dialogMessageType>\r\n}\r\n\r\n\r\nlet initialState = {\r\n    dialogNames: [\r\n        {id: 1, name: \"Sharik\", ava: \"https://wallpaperim.net/_data/i/upload/2014/09/18/20140918448607-c935d187-me.jpg\"},\r\n        {id: 2, name: \"Archi\", ava: \"https://f.vividscreen.info/soft/ecbda7af9f74e75f084553dbfbcdccff/Nice-Dog-Muzzle-640x480.jpg\"},\r\n        {id: 3, name: \"Betty\", ava: \"https://scouteu.s3.amazonaws.com/cards/images_vt/merged/i_feel_so_lonely_without_you_1.jpg\"},\r\n        {id: 4, name: \"Tyzik\", ava: \"http://file.mobilmusic.ru/45/88/24/1369559-240.jpg\"},\r\n        {id: 5, name: \"Baron\", ava: \"https://i.ytimg.com/vi/S1C608GfriM/hqdefault.jpg\"},\r\n    ] as Array<dialogNameType>,\r\n    dialogMessages: [\r\n        {id: 1, message: \"Gav Gav\"},\r\n        {id: 2, message: \"RRRR\"},\r\n        {id: 3, message: \"Af Af\"},\r\n        {id: 4, message: \"AYYYYYYyyyy\"},\r\n        {id: 5, message: \"Tzyav\"},\r\n    ] as Array<dialogMessageType>,\r\n};\r\n\r\nexport const dialogReducer = (state: dialogsPageType = initialState, action: ActionDialogType) :dialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.NewText\r\n            return  {...state,\r\n                dialogMessages: [...state.dialogMessages, {id: 6, message: body} ]}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport type SendMessageType = ReturnType<typeof sendMessageCreator>\r\ntype ActionDialogType = SendMessageType\r\n\r\nexport const sendMessageCreator = (messageText: string) => ({type: SEND_MESSAGE, NewText: messageText} as const)\r\n\r\nexport default dialogReducer;\r\n","import {userAPI} from \"../api/api\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\nexport type locationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type photosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n    photoUrl?: string\r\n    location?: locationType\r\n}\r\n\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nconst FOLLOW = 'users/FOLLOW'\r\nconst UNFOLLOW = 'users/UN-FOLLOW'\r\nconst SET_USERS = 'users/SET-USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 15368,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: UsersType = initialState, action: ActionUserType): UsersType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.userID ? {...user, followed: true} : user)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => user.id === action.userID ? {...user, followed: false} : user)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(userId => userId !== action.userId)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => ({type: FOLLOW, userID} as const)\r\nexport const unFollowAC = (userID: number) => ({type: UNFOLLOW, userID} as const)\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPageAC = (pageNumber: number) => ({type: SET_CURRENT_PAGE, pageNumber} as const)\r\nexport const setTotalUsersCountAC = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const followingProgressAC = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\n\r\nexport type followACReturnType = ReturnType<typeof followAC>\r\nexport type unFollowACReturnType = ReturnType<typeof unFollowAC>\r\nexport type setUsersACReturnType = ReturnType<typeof setUsersAC>\r\nexport type setCurrentReturnType = ReturnType<typeof setCurrentPageAC>\r\nexport type setTotalUsersCountReturnType = ReturnType<typeof setTotalUsersCountAC>\r\nexport type toggleIsFetchingReturnType = ReturnType<typeof toggleIsFetching>\r\nexport type followingProgressReturnType = ReturnType<typeof followingProgressAC>\r\n\r\ntype ActionUserType = followACReturnType | unFollowACReturnType | setUsersACReturnType |\r\n    setCurrentReturnType | setTotalUsersCountReturnType | toggleIsFetchingReturnType | followingProgressReturnType\r\n\r\n\r\nexport const requestUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPageAC(currentPage))\r\n        let data = await userAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsersAC(data.items))\r\n        dispatch(setTotalUsersCountAC(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (\r\n    dispatch: any,\r\n    userId: number,\r\n    apiMethod: (userId: number) => Promise<AxiosResponse<{ items: Array<UserType>, resultCode: number }>>,\r\n    actionCreator: (userId: number) => followACReturnType | unFollowACReturnType\r\n) => {\r\n    dispatch(followingProgressAC(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(followingProgressAC(false, userId))\r\n}\r\n\r\nexport const followThunk = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followAC)\r\n    }\r\n}\r\n\r\nexport const unFollowThunk = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unFollowAC)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import axios, {AxiosResponse} from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\nimport {profilePhotoType, profileStatusType, UserProfileType} from \"../redux/profile-reducer\";\r\nimport {AuthType} from \"../redux/auth-reducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"089d3e24-70d2-4632-9ce2-42855d61866e\"},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers: (currentPage: number, pageSize: number) => {\r\n        return instance.get<void, AxiosResponse<{ items: Array<UserType>, totalCount: number }>>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow (userId: number) {\r\n        return instance.post<void, AxiosResponse<{ items: Array<UserType>, resultCode: number }>>(`follow/${userId}`)\r\n    },\r\n    unfollow (userId: number) {\r\n       return instance.delete<void, AxiosResponse<{ items: Array<UserType>, resultCode: number }>>(`follow/${userId}`)\r\n        },\r\n    getProfile: (userId: string) => {\r\n        return profileAPI.getProfile(userId)\r\n        // return instance.get<void, AxiosResponse<UserProfileType>>(`profile/` + userId)\r\n            }\r\n    }\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId: string) => {\r\n        return instance.get<void, AxiosResponse<UserProfileType>>(`profile/` + userId)\r\n    },\r\n\r\n    getStatus: (userId: string) => {\r\n        return instance.get<void, AxiosResponse<string>>(`profile/status/` + userId)\r\n    },\r\n\r\n    updateStatus: (newStatus: string) => {\r\n        return instance.put<void, AxiosResponse<profileStatusType>>(`profile/status`, {status: newStatus})\r\n    },\r\n    updatePhoto: (photo: File) => {\r\n        let formData = new FormData()\r\n        formData.append('image', photo)\r\n\r\n        return instance.put<void, AxiosResponse<profilePhotoType>>(`profile/photo`, formData, {headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }})\r\n    }\r\n}\r\n\r\n// type updatePhotoResponseType = {\r\n//     small: string\r\n//     large: string\r\n// }\r\n\r\nexport const authAPI = {\r\n   me() {\r\n       return instance.get<void, AxiosResponse<{ data: AuthType, resultCode: number }>>(`auth/me`)\r\n   },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n       return instance.post<void, AxiosResponse<{resultCode: number, messages: Array<string>, data: {userID: number}}>>(`auth/login`,\r\n           {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n       return instance.delete<void, AxiosResponse<{resultCode: number, messages: Array<string>, data: object}>>(`auth/login`)\r\n    }\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__2BPV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1OIvM\",\"item\":\"NavBar_item__39xfh\",\"activeLink\":\"NavBar_activeLink__1f5bY\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavBar.module.css';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}><NavLink to=\"/profile\" activeClassName={classes.activeLink}>ProfileD</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>MessagesD</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/users\" activeClassName={classes.activeLink}>UsersD</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/news\" activeClassName={classes.activeLink}>NewsD</NavLink></div>\r\n            <div className={`${classes.item} ${classes.active}`}><NavLink to=\"/music\" activeClassName={classes.activeLink}>MusicD</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"settings\" activeClassName={classes.activeLink}>SettingsD</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={'https://cdn6.f-cdn.com/contestentries/189230/14797445/55214b4cc2224_thumb900.jpg'}/>\r\n\r\n            <div className={classes.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logoutTC}>LogOut</button></div>\r\n                        : <NavLink to={'/login'}>LogIN</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type AuthType = {\r\n    id: string,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n    // isFetching: boolean\r\n}\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\n\r\nlet initialState: AuthType = {\r\n    id: '20162',\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: AuthType = initialState, action: ActionAuthType): AuthType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userID: string | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n    ({type: SET_USER_DATA, payload: {userID, email, login, isAuth}} as const)\r\n\r\n\r\nexport type setAuthUserDataACReturnType = ReturnType<typeof setAuthUserData>\r\n\r\ntype ActionAuthType = setAuthUserDataACReturnType\r\n\r\nexport const getAuthUserDataThunk = () => async (dispatch: Dispatch) => {\r\n   let response = await authAPI.me()\r\n            if (response.data.resultCode === 0) {\r\n                // деструктуризация\r\n                let {id, email, login } = response.data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n}}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserDataThunk())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                let action = stopSubmit('login', {_error: message})\r\n                dispatch(action)\r\n            }\r\n}\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n   let response = await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        }\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logoutTC} from \"../../redux/auth-reducer\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserDataWithThunk()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsReturnType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\ntype MapStatePropsReturnType = {\r\n    isAuth: boolean,\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchReturnType = {\r\n    // setAuthUserData: (userID: number | null, email: string | null, login: string | null) => void\r\n    // getAuthUserDataWithThunk: () => void\r\n    logoutTC: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapDispatchReturnType & MapStatePropsReturnType\r\n\r\nexport default connect(mapStateToProps, {\r\n    // setAuthUserData,\r\n    // getAuthUserDataWithThunk: getAuthUserDataThunk,\r\n    logoutTC\r\n})(HeaderContainer)","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsConrols\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport styles from './Login.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} component={Input} name={'email'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} component={Input} name={'password'} type={'password'}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div><Field type={'checkbox'} component={Input} name={'remember me'}/>remember me</div>\r\n\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nexport const Login = (props: PropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.loginTC(formData.email, formData.password, formData.rememberMe)\r\n        console.log(formData)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>)\r\n}\r\n\r\n// обворачиваем LoginForm\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype MapStatePropsReturnType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsReturnType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype MapDispatchPropsReturnType = {\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginPropsType = MapDispatchPropsReturnType & MapStatePropsReturnType\r\n\r\n// функциональная\r\nconst LoginContainer: React.FC<LoginPropsType> = ({isAuth, loginTC}) => {\r\n    return (\r\n        <Login isAuth={isAuth}\r\n               loginTC={loginTC}\r\n        />\r\n    )\r\n}\r\n\r\n//классовая\r\n// class LoginContainer extends React.Component <LoginPropsType> {\r\n//     render() {\r\n//         return (\r\n//             <Login isAuth={this.props.isAuth}\r\n//                    loginTC={this.props.loginTC}\r\n//             />\r\n//         )\r\n//     }\r\n//\r\n// }\r\n\r\nexport default connect(mapStateToProps, {loginTC})(LoginContainer)","import {getAuthUserDataThunk} from \"./auth-reducer\";\r\n\r\ntype AppType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst SET_INITIALIZED = 'app/SET_INITIALIZED'\r\n\r\n\r\nlet initialState: AppType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: AppType = initialState, action: ActionAuthType): AppType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () =>\r\n    ({type: SET_INITIALIZED } as const)\r\n\r\n\r\nexport type setInitializedSuccessACReturnType = ReturnType<typeof setInitializedSuccess>\r\n\r\nexport const initializeAppTC = () => (dispatch: any) => {\r\n   let promise = dispatch(getAuthUserDataThunk())\r\n    promise.then(()=> {\r\n        dispatch(setInitializedSuccess())\r\n    })\r\n}\r\n\r\ntype ActionAuthType = setInitializedSuccessACReturnType\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport {BrowserRouter, HashRouter, Route} from 'react-router-dom';\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport {StateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(()=> import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(()=> import(\"./components/Profile/ProfileContainer\"))\nconst UsersContainer = React.lazy(()=> import(\"./components/Users/UsersContainer\"))\n\nclass App extends React.Component <AppPropsType>{\n    componentDidMount() {\n        this.props.initializeAppWithThunk()\n    }\n\n    render () {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <HashRouter>\n                <div className={'app-wraper'}>\n                    <HeaderContainer/>\n                    <NavBar/>\n                    <div className={'app-wraper-content'}>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer\n                        />}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginContainer/>}/>\n                        {/*<Route path='/news' component={News}/>*/}\n                        {/*<Route path='/music' component={Music}/>*/}\n                        {/*<Route path='/settings' component={Settings}/>*/}\n\n                    </div>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateType) : MapStateReturnType => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {\n    initializeAppWithThunk: initializeAppTC,\n})\n(App)\n\ntype MapDispatchReturnType = { initializeAppWithThunk: () => void }\n\ntype MapStateReturnType = { initialized: boolean }\n\ntype AppPropsType = MapDispatchReturnType & MapStateReturnType","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport  {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n    // sidebar: sidebarReducer\r\n});\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\nexport type StoreType = typeof store\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\n\nconst renderEntireTree = () => {\n    ReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <React.Suspense fallback={<Preloader/>}> <App/></React.Suspense>\n            </Provider>\n        </HashRouter>,\n        document.getElementById('root')\n    );\n}\n\nrenderEntireTree ()\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsConrols_formControl__1Id9k\",\"error\":\"FormsConrols_error__1V6K2\",\"errorSpan\":\"FormsConrols_errorSpan__3rYkt\"};","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.3069ae20.svg\";","import preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const Preloader = () => {\r\n    return  <div style={{backgroundColor: 'white'}}> <img src={preloader}/> </div>\r\n}","import React from 'react';\r\nimport styles from './FormsConrols.module.css'\r\n\r\ntype InputProps = {\r\n    name: string\r\n    onBlur: () => void\r\n    onChange: () => void\r\n    onDragStart: () => void\r\n    onDrop: () => void\r\n    onFocus: () => void\r\n    value: string\r\n}\r\ntype MetaProps = {\r\n    active: boolean\r\n    asyncValidating: boolean\r\n    autofilled: boolean\r\n    dirty: boolean\r\n    dispatch: () => void\r\n    error: string\r\n    form: string\r\n    initial: any\r\n    invalid: boolean\r\n    pristine: boolean\r\n    submitFailed: boolean\r\n    submitting: boolean\r\n    touched: boolean\r\n    valid: boolean\r\n    visited: boolean\r\n    warning: any\r\n}\r\n\r\ntype TextAreaPropsType = {\r\n    input: InputProps\r\n    meta: MetaProps\r\n    placeholder: string\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}: TextAreaPropsType) => {\r\n    const showError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <textarea {...input} {...props} className={showError ? styles.error : ''}/>\r\n            <div>\r\n                {showError && <span className={styles.errorSpan}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}: TextAreaPropsType) => {\r\n    const showError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <input {...input} {...props} className={showError ? styles.error : ''}/>\r\n            <div>\r\n                {showError && <span className={styles.errorSpan}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return 'Field is empty'\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    } else {\r\n        return undefined\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__36BEZ\",\"loginBlock\":\"Header_loginBlock__2fS4w\"};","import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nexport type contactsType = {\r\n    facebook: string | null\r\n    website: string | null\r\n    vk: string | null\r\n    twitter: string | null\r\n    instagram: string | null\r\n    youtube: string | null\r\n    github: string | null\r\n    mainLink: string | null\r\n}\r\n\r\ntype photosType = {\r\n    small: string | undefined\r\n    large: string | undefined\r\n}\r\n\r\nexport type UserProfileType = {\r\n    aboutMe?: string\r\n    contacts?: contactsType\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    fullName?: string\r\n    userId?: string\r\n    photos: photosType\r\n}\r\n\r\nexport type profileStatusType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: object\r\n}\r\n\r\nexport type profilePhotoType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: {\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE'\r\nconst SET_STATUS = 'profile/SET-STATUS'\r\nconst DELETE_POST = 'profile/DELETE-POST'\r\nconst SET_PHOTO = 'profile/SET-PHOTO'\r\nconst SET_PHOTO_SMALL = 'profile/SET-PHOTO-SMALL'\r\nconst SET_PHOTO_LARGE = 'profile/SET-PHOTO-LARGE'\r\n\r\nexport type postType = {\r\n    id?: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type profilePageType = {\r\n    posts: Array<postType>\r\n    profile: UserProfileType | null\r\n    status: string\r\n}\r\n\r\n\r\nlet initialState: profilePageType = {\r\n    posts: [\r\n        {id: 1, message: \"My first GAV\", likesCount: 12},\r\n        {id: 2, message: \"Don`t like Myay\", likesCount: 10},\r\n        {id: 3, message: \"How do you do\", likesCount: 16},\r\n    ] as Array<postType>,\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state: profilePageType = initialState, action: ActionProfileType): profilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                // newPostText: '',\r\n                posts: [...state.posts, {\r\n                    id: 4,\r\n                    message: action.postMessage,\r\n                    likesCount: 0\r\n                }]\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postID)}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        // case SET_PHOTO_SMALL: {\r\n        //     return {\r\n        //         ...state, profile: {...state.profile, photos: {...state.profile?.photos, small: action.photo}}\r\n        //     }\r\n        // }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\r\nexport type SetUserProfileReturnType = ReturnType<typeof setUserProfileAC>\r\nexport type SetStatusReturnType = ReturnType<typeof setStatusActionCreator>\r\nexport type DeletePostReturnType = ReturnType<typeof deletePostActionCreator>\r\nexport type SetPhotoReturnType = ReturnType<typeof setPhotoActionCreator>\r\nexport type SetPhotoLargeReturnType = ReturnType<typeof setLargePhotoActionCreator>\r\nexport type SetPhotoSmallReturnType = ReturnType<typeof setSmallPhotoActionCreator>\r\n\r\ntype ActionProfileType = AddPostActionType\r\n    | SetUserProfileReturnType\r\n    | SetStatusReturnType\r\n    | DeletePostReturnType\r\n    | SetPhotoReturnType\r\n    | SetPhotoLargeReturnType\r\n    | SetPhotoSmallReturnType\r\n\r\nexport const addPostActionCreator = (postText: string) => ({type: ADD_POST, postMessage: postText} as const)\r\nexport const setUserProfileAC = (profile: UserProfileType) => ({type: SET_USER_PROFILE, profile} as const)\r\nexport const setStatusActionCreator = (status: string) => ({type: SET_STATUS, status} as const)\r\nexport const deletePostActionCreator = (postID: number) => ({type: DELETE_POST, postID} as const)\r\nexport const setPhotoActionCreator = (photos: photosType) => ({type: SET_PHOTO, photos} as const)\r\nexport const setSmallPhotoActionCreator = (photo: string) => ({type: SET_PHOTO_SMALL, photo} as const)\r\nexport const setLargePhotoActionCreator = (photo: string) => ({type: SET_PHOTO_LARGE, photo} as const)\r\n\r\n\r\nexport const getUserProfileThunk = (userId: string) => async (dispatch: any) => {\r\n    let response = await userAPI.getProfile(userId)\r\n    dispatch(setUserProfileAC(response.data))\r\n}\r\n\r\nexport const getStatusThunk = (userId: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusActionCreator(response.data))\r\n}\r\n\r\nexport const updateStatusThunk = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatusActionCreator(status))\r\n}\r\n\r\nexport const updatePhotoThunk = (photo: File) => async (dispatch: any) => {\r\n    let response = await profileAPI.updatePhoto(photo)\r\n    debugger\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setPhotoActionCreator(response.data.data.photos))\r\n    //     dispatch(setLargePhotoActionCreator(response.data.data.photos.large))\r\n    // dispatch(setSmallPhotoActionCreator(response.data.data.photos.small))\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n"],"sourceRoot":""}